{
  "@context": [
    "http://w3c.github.io/wot/w3c-wot-td-context.jsonld",
    "https://w3c.github.io/wot/w3c-wot-common-context.jsonld",
    {
      "BACnet": "http://bacowl.sourceforge.net/2012/bacnet.ttl#/"
    },
    {
      "BACtype": "http://n.ethz.ch/student/ganeshr/bacnet/bacnettypes.json#/"
    },
    {
      "BA": "http://n.ethz.ch/student/ganeshr/bacnet/hvac_ont.owl#/"
    }
  ],
  "name": "BACnet Thing",
  "uris": [
    "coap://192.168.0.18/CNB/H110/RoomAutomation",
    "http://192.168.0.18:8080/CNB/H110/RoomAutomation",
    "bacnet://192.168.0.255:47808/"
  ],
  "encodings": "JSON",
  "@id": "1_0_93",
  "properties": [
    {
      "name": "Room temperature",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:Real"
      },
      "hrefs": [
        "HVAC/RoomTemperature",
        "HVAC/RoomTemperature",
        "/1/0/74/85"
      ],
      "unit": "celsius",
      "_comment": "Issue: directly observable Properties",
      "@type": [
        "BA:TemperatureSensor",
        "BACnet:AnalogInputObject:presentValue"
      ],
      "@id": "1_0_74_85"
    },
    {
      "name": "Room temperature status",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:StatusFlags"
      },
      "hrefs": [
        "HVAC/RoomTemperature/StatusFlags",
        "HVAC/RoomTemperature/StatusFlags",
        "/1/0/74/111"
      ],
      "_comment": "Example of bitstring type. Issue: type system",
      "@type": "BACnet:AnalogInputObject:statusFlags",
      "@id": "1_0_74_111"
    },
    {
      "name": "Temperature setpoint",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "HVAC/TemperatureSetpoint",
        "HVAC/TemperatureSetpoint",
        "/1/2/41/85"
      ],
      "unit": "celsius",
      "@type": [
        "BA:Setpoint",
        "BACnet:AnalogValueObject:presentValue"
      ],
      "@id": "1_2_41_85"
    },
    {
      "name": "Fan speed",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "HVAC/Fan/Speed",
        "HVAC/Fan/Speed",
        "/1/1/57/85"
      ],
      "_comment": "Issue: asymettric data types involved in read-write",
      "@type": [
        "BA:Output",
        "BACnet:AnalogOutputObject:presentValue"
      ],
      "@id": "1_1_57_85"
    },
    {
      "name": "Valve",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "HVAC/CoolingCoil/Valve",
        "HVAC/CoolingCoil/Valve",
        "/1/1/58/85"
      ],
      "_comment": "Issue: asymettric data types involved in read-write",
      "@type": [
        "BA:Output",
        "BACnet:AnalogOutputObject:presentValue"
      ],
      "@id": "1_1_58_85"
    },
    {
      "name": "Fan output priority",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:PriorityArray"
      },
      "hrefs": [
        "HVAC/Fan/PriorityArray",
        "HVAC/Fan/Priority",
        "/1/1/57/87"
      ],
      "_comment": "Example of an array whose elements are of hetrogenous types (sequence of BACnet::Any). Issue: type system",
      "@type": "BACnet:AnalogOutputObject:priorityArray",
      "@id": "1_2_224_87"
    },
    {
      "name": "Room air quality",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:Real"
      },
      "hrefs": [
        "HVAC/RoomAirQuality",
        "HVAC/RoomAirQuality",
        "/1/0/93/85"
      ],
      "unit": "ppm",
      "_comment": "Issue: directly observable Properties",
      "@type": [
        "BA:AirQualitySensor",
        "BACnet:AnalogInputObject:presentValue"
      ],
      "@id": "1_0_93_85"
    },
    {
      "name": "Occupancy",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:Boolean"
      },
      "hrefs": [
        "OccupancyStatus",
        "OccupancyStatus",
        "/1/5/70/85"
      ],
      "_comment": "Issue: directly observable Properties",
      "@type": [
        "BA:Input",
        "BACnet:BinaryValueObject:presentValue"
      ],
      "@id": "1_5_70_85"
    },
    {
      "name": "Light1 - current value of brightness",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "Lighting/Light1/Brightness",
        "Lighting/Light1/Brightness",
        "1/2/224/85"
      ],
      "@type": "BA:Output",
      "@id": "1_2_224_85"
    },
    {
      "name": "Light1 - override value of brightness",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "Lighting/Light1/BrightnessOverride",
        "Lighting/Light1/BrightnessOverride",
        "1/2/223/85"
      ],
      "@type": "BA:Output",
      "@id": "1_2_223_85"
    },
    {
      "name": "Light21 - current value of brightness",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "Lighting/Light2/Brightness",
        "Lighting/Light2/Brightness",
        "1/2/226/85"
      ],
      "@type": "BA:Output",
      "@id": "1_2_226_85"
    },
    {
      "name": "Light2 - override value of brightness",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:PropertyValueNumeric"
      },
      "hrefs": [
        "Lighting/Light2/BrightnessOverride",
        "Lighting/Light2/BrightnessOverride",
        "1/2/225/85"
      ],
      "@type": "BA:Output",
      "@id": "1_2_225_85"
    },
    {
      "name": "Room efficiency level",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:Enumerated"
      },
      "hrefs": [
        "EnergyEfficiency",
        "EnergyEfficiency",
        "1/19/25/85"
      ],
      "@type": [
        "BA:EnergyEfficiencyLevels",
        "BACnet:MultistateValueObject:presentValue"
      ],
      "@id": "1_19_25_85"
    },
    {
      "name": "Temperature history",
      "writable": false,
      "valueType": {
        "$ref": "BACtype:LogRecords"
      },
      "hrefs": [
        "HVAC/RoomTemperature/Trend/Values",
        "HVAC/RoomTemperature/Trend/Values",
        "/1/20/5/131"
      ],
      "_comment": "Stream of timestamped values. Issue: parameterization for ReadRange)",
      "@type": "BACnet:TrendLogObject:logBuffer",
      "@id": "1_20_5_131"
    },
    {
      "name": "Trend logger reference",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:DeviceObjectPropertyReference"
      },
      "hrefs": [
        "HVAC/RoomTemperature/Trend/Source",
        "HVAC/RoomTemperature/Trend/Source",
        "/1/20/5/132"
      ],
      "_comment": "Example of complex type",
      "@type": "BACnet:TrendLogObject:logDeviceObjectProperty",
      "@id": "1_20_5_132"
    },
    {
      "name": "Trend logging enable",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:Boolean"
      },
      "hrefs": [
        "HVAC/RoomTemperature/Trend/Enable",
        "HVAC/RoomTemperature/Trend/Enable",
        "/1/20/5/133"
      ],
      "_comment": "Set this to false before changing start and end time",
      "@type": "BACnet:TrendLogObject:enable",
      "@id": "1_20_5_133"
    },
    {
      "name": "Trend logging start",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:DateTime"
      },
      "hrefs": [
        "HVAC/RoomTemperature/Trend/StartTime",
        "HVAC/RoomTemperature/Trend/StartTime",
        "/1/20/5/142"
      ],
      "_comment": "Example of complex type with special encoding",
      "@type": "BACnet:TrendLogObject:startTime",
      "@id": "1_20_5_142"
    },
    {
      "name": "Trend logging end - example of complex type with special encoding",
      "writable": true,
      "valueType": {
        "$ref": "BACtype:DateTime"
      },
      "hrefs": [
        "HVAC/RoomTemperature/Trend/EndTime",
        "HVAC/RoomTemperature/Trend/EndTime",
        "/1/20/5/143"
      ],
      "_comment": "Example of complex type with special encoding. Constraint w.r.t start time.",
      "@type": "BACnet:TrendLogObject:endTime",
      "@id": "1_20_5_143"
    },
    {
      "name": "Config file",
      "writable": false,
      "valueType": {
        "type": "array",
        "items": {
          "type": "integer"
        }
      },
      "hrefs": [
        "Files/ConfigFile",
        "Files/ConfigFile",
        "/1/10/301/0"
      ],
      "_comment": "Example of binary data. Issue: property-specific encoding (Media Types?)",
      "@type": "BACnet:FileObject",
      "@id": "1_10_301_0"
    },
    {
      "name": "Product Image",
      "writable": false,
      "valueType": {
        "type": "array",
        "items": {
          "type": "integer"
        }
      },
      "hrefs": [
        "Files/ImageFile",
        "Files/ImageFile",
        "/1/10/302/0"
      ],
      "_comment": "Example of binary data. Issue: property-specific encoding (Media Types?)",
      "@type": "BACnet:FileObject",
      "@id": "1_10_302_0"
    }
  ],
  "actions": [
    {
      "name": "BACType_BlindsControlActionMonitor",
      "inputData": {
        "valueType": {
          "$ref": "BACtype:BlindsPosition"
        }
      },
      "outputData": {
        "valueType": {
          "$ref": "BACtype:BlindsControlActionMonitor"
        }
      },
      "hrefs": [
        "Actions/BlindsControl1",
        "Actions/BlindsControl1",
        "/BlindsControlAction"
      ],
      "_comment": "Vocabulary for @type unfinished",
      "@id": "1_258_22_85_CMD"
    },
    {
      "name": "BACType_BlindsControlActionMonitor2",
      "inputData": {
        "valueType": {
          "$ref": "BACtype:BlindsPosition"
        }
      },
      "outputData": {
        "valueType": {
          "$ref": "BACtype:BlindsControlActionMonitor"
        }
      },
      "hrefs": [
        "Actions/BlindsControl2",
        "Actions/BlindsControl2",
        "/BlindsControlAction"
      ],
      "_comment": "Vocabulary for @type unfinished",
      "@id": "1_258_23_85_CMD"
    },
    {
      "name": "BACType_TemperatureControlActionMonitor",
      "inputData": {
        "valueType": {
          "$ref": "BACtype:Real"
        }
      },
      "outputData": {
        "valueType": {
          "$ref": "BACtype:TemperatureControlActionMonitor"
        }
      },
      "hrefs": [
        "Actions/TemperatureControl",
        "Actions/TemperatureControl",
        "/TemperatureControlAction"
      ],
      "_comment": "Vocabulary for @type unfinished",
      "@id": "1_2_14_85_CMD"
    }
  ],
  "events": [
    {
      "name": "Change of value",
      "inputData": {
        "valueType": {
          "$ref": "BACtype:COVSubscriptionParameters"
        }
      },
      "hrefs": [
        "EventSource/CovEvent",
        "EventSource/CovEvent",
        "/SubscribeCOV"
      ]
    },
    {
      "name": "Alarm events subscription",
      "inputData": {
        "valueType": {
          "$ref": "BACtype:AddRecipientRequest"
        }
      },
      "hrefs": [
        "EventSource/AlarmEvent",
        "EventSource/AlarmEvent",
        "/SubscribeEvents"
      ]
    }
  ]
}
